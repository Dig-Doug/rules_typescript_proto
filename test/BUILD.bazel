load("@aspect_rules_jasmine//jasmine:defs.bzl", "jasmine_test")
load("@aspect_rules_rollup//rollup:defs.bzl", "rollup")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")

# This test checks that the protos can be resolved in a nodejs environment
jasmine_test(
    name = "commonjs_test",
    data = [
        ":commonjs_test_lib",
        "//:node_modules/@improbable-eng/grpc-web",
        "//:node_modules/google-protobuf",
    ],
    node_modules = "//:node_modules",
)

ts_project(
    name = "commonjs_test_lib",
    srcs = [
        "commonjs_test.spec.ts",
    ],
    tsconfig = ":tsconfig.json",
    deps = [
        "//:node_modules/@types/google-protobuf",
        "//:node_modules/@types/jasmine",
        "//:node_modules/google-protobuf",
        "//test/proto:inside_dir_ts_proto",
        "//test/proto:pizza_service_ts_base_proto",
        "//test/proto:pizza_service_ts_grpc_web_proto",
        "//test/proto/common:delivery_person_ts_proto",
    ],
)

# Copy the google-protobuf library and convert it to a AMD module so it can be loaded in the
# RequireJS test environment.
genrule(
    name = "google_protobuf_requirejs",
    srcs = [
        "//:node_modules/google-protobuf/google-protobuf.js",
    ],
    outs = [
        "google-protobuf.js",
    ],
    cmd = """echo "define('google-protobuf', function(require, exports, module) {" > $@ \
             && cat $< >> $@ \
             && echo '});' >> $@""",
)

genrule(
    name = "google_protobuf_timestamp_pb_requirejs",
    srcs = [
        "//:node_modules/google-protobuf/google/protobuf/timestamp_pb.js",
    ],
    outs = [
        "timestamp_pb.js",
    ],
    cmd = """echo "define('google-protobuf/google/protobuf/timestamp_pb', function(require, exports, module) {" > $@ \
             && cat $< >> $@ \
             && echo '});' >> $@""",
)

ts_project(
    name = "proto_with_deps_test",
    testonly = 1,
    srcs = ["proto_with_deps_test.spec.ts"],
    tsconfig = ":tsconfig.json",
    deps = [
        "//test/proto/common:delivery_person_ts_proto",
        "//:node_modules/@types/jasmine",
        # Don't put pizza_ts_proto here, we want to test it is included transitively
    ],
)

ts_project(
    name = "pizza_service_proto_test",
    testonly = 1,
    srcs = ["pizza_service_proto_test.spec.ts"],
    tsconfig = ":tsconfig.json",
    deps = [
        "//test/proto:pizza_service_ts_base_proto",
        "//test/proto:pizza_service_ts_grpc_web_proto",
        "//test/proto/common:pizza_ts_base_proto",
        "//:node_modules/@types/jasmine",
        # Don't put delivery_person_ts_proto here, we want to test it is included transitively
    ],
)

ts_project(
    name = "pizza_service_proto_grpc_node_test",
    testonly = 1,
    srcs = ["pizza_service_proto_grpc_node_test.spec.ts"],
    tsconfig = ":tsconfig.json",
    deps = [
        "//test/proto:pizza_service_ts_base_proto",
        "//test/proto:pizza_service_ts_grpc_node_proto",
        "//test/proto/common:pizza_ts_base_proto",
        "//:node_modules/@types/jasmine",
        # Don't put delivery_person_ts_proto here, we want to test it is included transitively
    ],
)

jasmine_test(
    name = "grpc_node_test",
    data = [
        ":pizza_service_proto_grpc_node_test",
        "//:node_modules/google-protobuf",
        "//:node_modules/grpc",
    ],
    node_modules = "//:node_modules",
)

rollup(
    name = "test_es6_bundling",
    config_file = "rollup.config.js",
    entry_points = {
        ":test_bundling.ts": "index",
    },
    format = "cjs",
    node_modules = "//:node_modules",
    output_dir = True,
    deps = [
        ":test_bundling_lib",
        "//:node_modules/rollup-plugin-commonjs",
        "//:node_modules/rollup-plugin-node-resolve",
    ],
)

ts_project(
    name = "test_bundling_lib",
    srcs = ["test_bundling.ts"],
    tsconfig = ":test_bundling_tsconfig.json",
    deps = [
        "//:node_modules/@improbable-eng/grpc-web",
        "//:node_modules/google-protobuf",
        "//test/proto:inside_dir_ts_proto",
        "//test/proto:naming_styles_ts_proto",
        "//test/proto:pizza_service_ts_base_proto",
        "//test/proto:pizza_service_ts_grpc_web_proto",
        "//test/proto/common:delivery_person_ts_proto",
        "//test/proto/common:pizza_ts_base_proto",
    ],
)

jasmine_test(
    name = "rollup_test",
    data = [
        ":rollup_test.spec.js",
        ":test_es6_bundling",
    ],
    node_modules = "//:node_modules",
)
